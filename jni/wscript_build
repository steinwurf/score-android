#! /usr/bin/env python
# encoding: utf-8

# =========== JUTILS =========== #

bld.stlib(
    features='cxx',
    source=bld.path.ant_glob('jutils/**/*.cpp'),
    target='jutils',
    lib=['android'],
    use=[],
    export_includes=['.'])

# ============================== #

cpu = bld.env['DEST_CPU']
cpu_copy_path_map = {
    'x86': 'x86',
    'x86_64': 'x86_64',
    'arm': 'armeabi',
    'arm64': 'arm64-v8a',
    # Unsupported
    # 'armeabi-v7a': 'armeabi-v7a',
    # 'mips': 'mips',
    # 'mips64': 'mips64',
}
if cpu not in cpu_copy_path_map:
    bld.fatal("Unsupported Destination CPU: {}".format(cpu))

copy_path_platform = cpu_copy_path_map[cpu]

# =========== RECEIVER =========== #

bld(features='cxx cxxshlib copy_binary',
    source=['receiver/receiver_jni.cpp'],
    target='receiver_jni',
    install_path=None,
    copy_path='../receiver/src/main/jniLibs/' + copy_path_platform,
    lib=['android'],
    use=['jutils', 'score_static'])

bld(features='cxx cxxshlib copy_binary',
    source=['receiver/score_receiver_version_jni.cpp'],
    target='score_receiver_version_jni',
    install_path=None,
    copy_path='../receiver/src/main/jniLibs/' + copy_path_platform,
    lib=['android'],
    use=['STEINWURF_VERSION'])

# =========== SENDER =========== #

bld(features='cxx cxxshlib copy_binary',
    source=['sender/sender_jni.cpp'],
    target='sender_jni',
    install_path=None,
    copy_path='../sender/src/main/jniLibs/' + copy_path_platform,
    lib=['android'],
    use=['jutils', 'score_static'])

bld(features='cxx cxxshlib copy_binary',
    source=['sender/score_sender_version_jni.cpp'],
    target='score_sender_version_jni',
    install_path=None,
    copy_path='../sender/src/main/jniLibs/' + copy_path_platform,
    lib=['android'],
    use=['STEINWURF_VERSION'])
